{"ast":null,"code":"var _jsxFileName = \"/Users/rohityawalkar/Documents/Workspace/practice/learn-react-basics/src/components/Todo/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Backdrop from './Backdrop';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Todo = props => {\n  _s();\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  function handleDelete() {\n    setModalIsOpen(!modalIsOpen);\n  }\n\n  function closeModelHandler() {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: handleDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), modalIsOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        onDelete: closeModelHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Backdrop, {\n        onCancel: closeModelHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todo, \"d4gKB9FOjUoqrytIak5jiPIqzB0=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/rohityawalkar/Documents/Workspace/practice/learn-react-basics/src/components/Todo/Todo.js"],"names":["React","useState","Backdrop","Modal","Todo","props","modalIsOpen","setModalIsOpen","handleDelete","closeModelHandler","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;;AAEA,WAASO,YAAT,GAAwB;AACtBD,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACD;;AAED,WAASG,iBAAT,GAA6B,CAE5B;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA,gBAAMJ,KAAK,CAACK;AAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAwB,QAAA,OAAO,EAAEF,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,EASIF,WAAW,iBACX;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAEG;AAAjB;AAAA;AAAA;AAAA;AAAA,cADF,oBAEE,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAGA;AAArB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA7BD;;GAAML,I;;KAAAA,I;AA+BN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport Backdrop from './Backdrop';\nimport Modal from './Modal';\n\nconst Todo = (props) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  function handleDelete() {\n    setModalIsOpen(!modalIsOpen)\n  }\n\n  function closeModelHandler() {\n    \n  }\n\n  return (\n    <div className='card'>\n      <h2>{ props.title }</h2>\n      <div className='actions'>\n        <button className='btn' onClick={handleDelete}>\n          Delete\n        </button>\n        {/* if we do deleteHandler() function will be executed just after component rendered if we do deleteHandler only be called on event click */}\n      </div>\n      {\n        modalIsOpen &&\n        <>\n          <Modal onDelete={closeModelHandler } /> {/* handleDelete don't here because Modal is not build in component */}\n          <Backdrop onCancel={ closeModelHandler }/>\n        </>\n      }\n    </div>\n  )\n}\n\nexport default Todo"]},"metadata":{},"sourceType":"module"}